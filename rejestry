library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity RegisterFile is
    port (
        clk : in std_logic;
        DI : in signed (15 downto 0);
        BA : in signed (15 downto 0);
        Sbb : in signed (4 downto 0);  -- zwiększone z 4 bitów
        Sbc : in signed (4 downto 0);
        Sba : in signed (4 downto 0);
        Sid : in signed (2 downto 0);
        Sa  : in signed (1 downto 0);
        BB  : out signed (15 downto 0);
        BC  : out signed (15 downto 0);
        ADR : out signed (31 downto 0);
        IRout : out signed (15 downto 0)
    );
end entity;

architecture rtl of RegisterFile is

    -- Rejestry danych 16-bitowe
    signal IR, TMP : signed(15 downto 0);
    signal R1, R2, R3, R4, R5, R6, R7, R8 : signed(15 downto 0);
    signal R9, R10, R11, R12, R13, R14, R15, R16 : signed(15 downto 0);

    -- Rejestry 32-bitowe: adresowe i pomocnicze
    signal PC, SP, AD, ATMP : signed(31 downto 0);

begin

process(clk)
begin
    if rising_edge(clk) then
        -- Operacje specjalne
        case Sid is
            when "001" =>
                PC <= PC + 1;
            when "010" =>
                SP <= SP + 1;
            when "011" =>
                AD <= AD + 1;
            when others =>
                null;
        end case;

        -- Zapis do rejestrów
        case Sba is
            when "00000" => IR <= BA;
            when "00001" => TMP <= BA;
            when "00010" => R1 <= BA;
            when "00011" => R2 <= BA;
            when "00100" => R3 <= BA;
            when "00101" => R4 <= BA;
            when "00110" => R5 <= BA;
            when "00111" => R6 <= BA;
            when "01000" => R7 <= BA;
            when "01001" => R8 <= BA;
            when "01010" => R9 <= BA;
            when "01011" => R10 <= BA;
            when "01100" => R11 <= BA;
            when "01101" => R12 <= BA;
            when "01110" => R13 <= BA;
            when "01111" => R14 <= BA;
            when "10000" => R15 <= BA;
            when "10001" => R16 <= BA;
            when others => null;
        end case;
    end if;
end process;

-- Odczyt BB
with Sbb select
    BB <= DI    when "00000",
          TMP   when "00001",
          R1    when "00010",
          R2    when "00011",
          R3    when "00100",
          R4    when "00101",
          R5    when "00110",
          R6    when "00111",
          R7    when "01000",
          R8    when "01001",
          R9    when "01010",
          R10   when "01011",
          R11   when "01100",
          R12   when "01101",
          R13   when "01110",
          R14   when "01111",
          R15   when "10000",
          R16   when "10001",
          (others => '0') when others;

-- Odczyt BC
with Sbc select
    BC <= DI    when "00000",
          TMP   when "00001",
          R1    when "00010",
          R2    when "00011",
          R3    when "00100",
          R4    when "00101",
          R5    when "00110",
          R6    when "00111",
          R7    when "01000",
          R8    when "01001",
          R9    when "01010",
          R10   when "01011",
          R11   when "01100",
          R12   when "01101",
          R13   when "01110",
          R14   when "01111",
          R15   when "10000",
          R16   when "10001",
          (others => '0') when others;

-- Wybór rejestru adresowego
with Sa select
    ADR <= AD    when "00",
            PC    when "01",
            SP    when "10",
            ATMP  when "11",
            (others => '0') when others;

-- Wystawienie rejestru rozkazów
IRout <= IR;

end rtl;
